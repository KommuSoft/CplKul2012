oo
--------------------------------------------------------------------------------
* te lange blokken tekst				  (OK-PJ)
* 7 types moeten niet meer vermeld worden (OK-PJ)
* table associative array				  (OK-PJ)
* multiple inheritance					  (OK-PJ)

portability
--------------------------------------------------------------------------------

* Is het niet zo dat vm instructies gemakkelijk te decompilen zijn (tenzij je een obfucater gebruikt)? Bij Java gaat het gemakkelijk, over C# heb ik geen idee. [ok Willem]
* Over C++: er zijn geen 1300 pagina's geschreven om de taal compatible te houden. Dat is de volledige standaard. [ok Jonas]
* Er wordt gesproken over een runtime compiler. Voor mij klinkt dit raar, zou er iets beter bestaan? runtime interpreter mss [ok Jonas]
* Bron voor stack-based en register-based vermelden. [ok jonas]

expressiveness
--------------------------------------------------------------------------------
* Sommige delen code zijn lang, misschien gebruik maken van $this->code(...) en die dan onderaan plaatsen met een verwijzing?
* Het gebruik van "one" is iets te veel naar mijn mening [ok willem]
* $cpp0_0 zegt dat TMP code kan reduceren. Ik zie in dat templated code code kan reduceren maark TMP zie ik dat niet direct doen. [ok willem]
* $cpp1 zegt dat TMP ervoor zorgt dat je code kan schrijven die anders te complex is om met de hand te schrijven. Ik ga daar niet volledig mee akkoord, TMP is ook heel complex (wordt beschouwd als een van de meest complexe zaken in C++). [ok willem]
* Ik hou niet van de uitleg van coroutines. Er wordt gezegd dat dit methodes zijn die samenwerken maar in het voorbeeld wordt er maar 1 methode gegeven, dus er kan niet samengewerkt worden. [ok willem]
* De Java - C# discussie over het aantal regels code: eigenlijk is het 26-39 en niet 30-50 (witregels worden meestal genegeerd in zulke vergelijkingen), maar dat is een detail. [ok willem]
* Java zegt dat het intern naar een object-oriented pattern zal gecompileerd worden. Ik heb daar nog nooit van gehoord. Bedoel je dat het intern naar full blown object oriented code zal omgezet worden of dat het zal omgezet worden naar een iterator (of gelijkaardig) pattern? [ok willem]
* Plotseling wordt er gezegd dat C++ ook coroutines heeft. Mss ergens een overgang maken. En C++ heeft geen coroutines, je moet een library gebruiken. Dus de vergelijking met macro's gaat niet op, je kan ze schrijven via templates of via gewone C++ code. [ok willem]
* my question to c++ -> onbeantwoord gebleven [ok willem]
* bloated file -> bloated source code? [ok willem]

typing
-------------------
* This is because the type is inferred at run-time which is less noticeable and can be done in a more lazy way. [ok Jonas]
* interferred typing -> implicit typing? [ok Jonas]
* bron voor abstract stack [ok Jonas]
* python mag mss vervangen worden [ok Jonas]

language design
-----------------------
since 2010 -> verandereren naar versie van het framework. Gebruikte bron: http://msdn.microsoft.com/en-us/magazine/ee336309.aspx (OK-PJ)
lua -> f# en combinatie met andere talen of zoiets


